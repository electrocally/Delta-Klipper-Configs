[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set FILAMENT = params.FILAMENT|default(PLA)|string %}
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    # Pause to ensure driver stall flag is clear
    G4 P1500
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Probe Once
    # PROBE
    # Load default bed mesh
    BED_MESH_PROFILE LOAD=default
    # Start bed heating
    M140 S{BED_TEMP}
    # Move the nozzle near the bed
    G1 Z5 Y45 X-45 F2000
    # Set z-offset according to filament type
    {% if FILAMENT == 'PETG' %}
        SET_GCODE_OFFSET Z_ADJUST=0.220 MOVE=1 # PETG
    {% elif FILAMENT == 'PLA' %}
        SET_GCODE_OFFSET Z_ADJUST=-0.040 MOVE=1 # PLA
    {% endif %}

    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}

[gcode_macro END_PRINT]
gcode:
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    # Disable steppers
    M84

[gcode_macro SENSORLESS_HOME]
gcode:
    {% set HOME_CUR = 0.800 %}
    {% set RUN_CUR = printer.configfile.settings['tmc2209 stepper_a'].run_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_a CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_b CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_c CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P800
    # Home
    G28
    # Relative Positioning
    G91
    # Move away 5mm
    G1 Z-5 F1200
    # Pause to ensure driver stall flag is clear
    G4 P800
    # Absolute Positioning
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_a CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_b CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_c CURRENT={RUN_CUR}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}